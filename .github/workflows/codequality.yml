name: Lint

on: [push]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv && uv build

  # lint:
  #   needs: build-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: psf/black@stable
  #       with:
  #         options: "--check --verbose -l 100 -t py39"
  #         src: "./openodia"

  code-quality:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv && uv sync --all-extras
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Security Analysis with bandit
      run: |
        mkdir ci-logs
        uv run bandit -r -lll  -f txt -o ci-logs/bandit.log ./openodia ./tests
        
    - name: Archive bandit report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: ci-logs/bandit.log