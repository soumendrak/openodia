name: Lint

on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv && uv build

  # lint:
  #   needs: build-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: psf/black@stable
  #       with:
  #         options: "--check --verbose -l 100 -t py39"
  #         src: "./openodia"

  code-quality:
    needs: build-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv && uv sync --all-extras
    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        uv run ruff check --select=E9,F63,F7,F82 --statistics
        # Run full ruff linting
        uv run ruff check --statistics
    
    - name: Check formatting with ruff
      run: |
        uv run ruff format --check
    
    - name: Security Analysis with bandit
      run: |
        mkdir ci-logs
        uv run bandit -r -lll  -f txt -o ci-logs/bandit.log ./openodia ./tests

    - name: Archive bandit report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: ci-logs/bandit.log

    - name: Run tests
      run: |
        uv run pytest -v
