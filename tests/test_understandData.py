import pytest

from openodia import ud


class TestUnderstandData:
    def test_word_tokenizer(self):
        assert ud.word_tokenizer(
            "କ୍ୱାଣ୍ଟମ କମ୍ପ୍ୟୁଟିଙ୍ଗ, ହେଉଛି ଏକ ଉଦୀୟମାନ ହାର୍ଡ଼ୱେର ଏବଂ ସଫ୍ଟୱେରର ପ୍ରଯୁକ୍ତିବିଦ୍ୟା, ଯାହା କଠିନ ଗାଣିତିକ ସମସ୍ୟାଗୁଡ଼ିକର ସମାଧାନ ପାଇଁ ଉପ-ପାରମାଣବିକ ଘଟଣାଗୁଡ଼ିକର ଉପଯୋଗ କରିଥାଏ ।[୧]"
        ) == [
            "କ୍ୱାଣ୍ଟମ",
            "କମ୍ପ୍ୟୁଟିଙ୍ଗ",
            "ହେଉଛି",
            "ଏକ",
            "ଉଦୀୟମାନ",
            "ହାର୍ଡ଼ୱେର",
            "ଏବଂ",
            "ସଫ୍ଟୱେରର",
            "ପ୍ରଯୁକ୍ତିବିଦ୍ୟା",
            "ଯାହା",
            "କଠିନ",
            "ଗାଣିତିକ",
            "ସମସ୍ୟାଗୁଡ଼ିକର",
            "ସମାଧାନ",
            "ପାଇଁ",
            "ଉପ",
            "ପାରମାଣବିକ",
            "ଘଟଣାଗୁଡ଼ିକର",
            "ଉପଯୋଗ",
            "କରିଥାଏ",
            "।",
            "୧",
        ]

    def test_sentence_tokenizer(self):
        assert ud.sentence_tokenizer(
            "ଏହି ଭବନଟିକୁ, ନ୍ୟାୟର ନିକିତିକୁ ପ୍ରଦର୍ଶନ କରୁଥିବା ଆକୃତି ଦିଆଯାଇଛି । ଏହାର ମଧ୍ଯ ଭାଗ ନିକିତିର ଦଣ୍ଡ, ତଥା ଦୁଇ ପଟେ ଦୁଇଟି ନ୍ୟାୟକକ୍ଷ ନିକିତିର ଦୁଇ ଭାରକୁ ଦର୍ଶାଉଛି । ଭବନର ମଧ୍ଯ ଭାଗରେ ମୁଖ୍ଯ ବିଚାରପତିଙ୍କ ନ୍ୟାୟକକ୍ଷ ଅବସ୍ଥିତ"
        ) == [
            "ଏହି ଭବନଟିକୁ, ନ୍ୟାୟର ନିକିତିକୁ ପ୍ରଦର୍ଶନ କରୁଥିବା ଆକୃତି ଦିଆଯାଇଛି",
            " ଏହାର ମଧ୍ଯ ଭାଗ ନିକିତିର ଦଣ୍ଡ, ତଥା ଦୁଇ ପଟେ ଦୁଇଟି ନ୍ୟାୟକକ୍ଷ ନିକିତିର ଦୁଇ ଭାରକୁ ଦର୍ଶାଉଛି",
            " ଭବନର ମଧ୍ଯ ଭାଗରେ ମୁଖ୍ଯ ବିଚାରପତିଙ୍କ ନ୍ୟାୟକକ୍ଷ ଅବସ୍ଥିତ",
        ]

    def test_remove_stopwords(self):
        assert ud.remove_stopwords("ରାମ ଓ ସୀତା ଆମକୁ ଆଶୀର୍ବାଦ ଦେଇଛନ୍ତି") == [
            "ରାମ",
            "ସୀତା",
            "ଆମକୁ",
            "ଆଶୀର୍ବାଦ",
        ]
        assert (
            ud.remove_stopwords("ରାମ ଓ ସୀତା ଆମକୁ ଆଶୀର୍ବାଦ ଦେଇଛନ୍ତି ", get_str=True)
            == "ରାମ ସୀତା ଆମକୁ ଆଶୀର୍ବାଦ"
        )

    @pytest.mark.parametrize(
        "text, threshold, output",
        [
            (
                "hey how are you?",
                0.5,
                {"language": "non-odia", "confidence_score": 1.0},
            ),
            (
                "hey how are you? ନ୍ୟାଚୁରାଲ ଲାଙ୍ଗୁଏଜ ପ୍ରୋସେସିଂ",
                0.5,
                {"language": "odia", "confidence_score": 0.67},
            ),
            (
                "hey how are you? ନ୍ୟାଚୁରାଲ ଲାଙ୍ଗୁଏଜ ପ୍ରୋସେସିଂ",
                0.7,
                {"language": "non-odia", "confidence_score": 0.33},
            ),
            (
                "ନ୍ୟାଚୁରାଲ ଲାଙ୍ଗୁଏଜ ପ୍ରୋସେସିଂ ବା ପ୍ରାକୃତିକ ଭାଷା ପ୍ରକ୍ରିୟାକରଣ କଂପ୍ୟୁଟର ବିଜ୍ଞାନ ଏବଂ ଆର୍ଟିଫିସିଆଲ ଇଣ୍ଟେଲିଜେନ୍ସର ସେହି ବିଭାଗକୁ କୁହାଯ ାଏ ଯାହା ମନୁଷ୍ୟର ଭାଷାଗୁଡ଼ିକ ସହ କମ୍ପ୍ୟୁଟରର କଥାବାର୍ତ୍ତାକୁ ବୁଝାଇଥାଏ। ",
                0.5,
                {"language": "odia", "confidence_score": 0.99},
            ),
        ],
    )
    def test_detect_language(self, text, threshold, output):
        assert ud.detect_language(text, threshold=threshold) == output
